log                 log.txt
units               lj
dimension           2
atom_style          molecular
read_data           configuration.txt extra/bond/per/atom 5  extra/special/per/atom 20  extra/angle/per/atom 3
variable            ron equal 0.8                                 # growth rate [monomers/s]
variable            rdis equal 1                                 # dissociation rate [monomers/s]
variable            tauhyd equal 80.0                              # hydrolysis time [seconds]
variable            rnuc equal 0.1                               # nucleation rate [filaments/s]
variable            Kbond equal 1000.0                               # bond constant [kT/sigma2]
variable            Kbend equal 800.0                               # bend constant [kT/sigma2]
variable            Kobst equal 100.0                               # bend constant [kT/sigma2]
variable            tstep equal 0.001000                                 # simulation timestep size [seconds]
variable            realtime equal step*${tstep}                   # simulation time in real units [seconds]
variable            run_time equal 1000.0                            # simulation run time [seconds]
variable            treact equal 0.100000                            # reaction attempt time [seconds]
variable            dtheta equal 1.000000                            # requilibrium bond angle [seconds]
variable            frame_rate equal 10.0                          # coarse dumping interval [seconds]
variable            seed equal 1234                                  # random number generator seed
variable            maxatoms equal 40010                              # maximum number of atoms allowed in the system
variable            fCurv equal 0.000000                                 # magnitude of the curvature force [kT/sigma]
variable            fSwim equal 0.000000                                 # magnitude of the swimming force [kT/sigma]
variable            condarr equal "v_realtime >= 0.0"             # arrest for some initial time
variable            poff equal "1.0*v_condarr"                    # shrinking reaction initiation probability (0 or 1)
variable            condatoms equal "atoms >= v_maxatoms+2"
variable            pon equal (1-v_condatoms)                     # growing reaction initiation probability (0 or 1)

variable            kon atom ${ron}*${treact}                          # growth probability
variable            knuc atom ${rnuc}*${treact}                        # nucleation probability
variable            kdis equal ${rdis}*${treact}                          # dissociation probability

variable            thyd equal ${tauhyd}/${tstep}                 # hydrolysis time [simulation steps]
variable            rstep equal ${treact}/${tstep}                      # reaction interval [simulation steps]
variable            run_steps equal ${run_time}/${tstep}          # simulation run time [simulation steps]
variable            dump_time equal ${frame_rate}/${tstep}        # dumping interval [simulation steps]

variable            stab_steps equal 1

group               ghosts type 4

special_bonds       lj 1.0 1.0 1.0
bond_style          harmonic
bond_coeff          1 ${Kbond} 1.0

angle_style         harmonicchiral2d
angle_coeff         1 ${Kbend} ${dtheta}
angle_coeff         2 ${Kobst} 180.0

pair_style          hybrid/overlay zero 1.50 cosine/squared 1.50
pair_coeff          * * cosine/squared 0.00 1.00 1.10
pair_coeff          * * zero 1.50
pair_coeff          1 1 cosine/squared 1.00 1.00 1.00 wca
pair_coeff          1 2 cosine/squared 1.00 1.00 1.00 wca
pair_coeff          1 3 cosine/squared 1.00 1.00 1.00 wca
pair_coeff          2 2 cosine/squared 1.00 1.00 1.00 wca
pair_coeff          2 3 cosine/squared 1.00 1.00 1.00 wca
pair_coeff          3 3 cosine/squared 1.00 1.00 1.00 wca

# Nucleation Reactions_rdis molecular templates
molecule            mPreNucleation Reactions_rdis/pre_Nucleation.txt
molecule            mPostNucleation Reactions_rdis/post_Nucleation.txt

# Growth Reactions_rdis molecular templates
molecule            mPreDimerOn Reactions_rdis/pre_DimerOn.txt
molecule            mPostDimerOn Reactions_rdis/post_DimerOn.txt
molecule            mPreTrimerOn Reactions_rdis/pre_TrimerOn.txt
molecule            mPostTrimerOn Reactions_rdis/post_TrimerOn.txt
molecule            mPreOligomerOn Reactions_rdis/pre_OligomerOn.txt
molecule            mPostOligomerOn Reactions_rdis/post_OligomerOn.txt

# Shrink Reactions_rdis molecular templates
molecule            mPreDimerOff Reactions_rdis/pre_DimerOff.txt
molecule            mPostDimerOff Reactions_rdis/post_DimerOff.txt
molecule            mPreTrimerOff Reactions_rdis/pre_TrimerOff.txt
molecule            mPostTrimerOff Reactions_rdis/post_TrimerOff.txt
molecule            mPreQuartomerOff Reactions_rdis/pre_QuartomerOff.txt
molecule            mPostQuartomerOff Reactions_rdis/post_QuartomerOff.txt
molecule            mPreOligomerOff Reactions_rdis/pre_OligomerOff.txt
molecule            mPostOligomerOff Reactions_rdis/post_OligomerOff.txt

variable            vMaskHBefore atom "type==2 || type==3"
group               HeadBefore dynamic all var vMaskHBefore every 1
variable            vMaskCBefore atom "type==1"
group               CoreBefore dynamic all var vMaskCBefore every 1
variable            vMaskSAZ atom "v_vSA == 0"
fix                 fSAZ all store/state 10 v_vMaskSAZ

fix                 freact all bond/react  stabilization yes AllAtoms 0.1  reset_mol_ids no         &
                react Nucleation all ${rstep} 0.900000 1.100000 mPreNucleation mPostNucleation Reactions_rdis/map_Nucleation.txt prob v_pon ${seed} stabilize_steps ${stab_steps} modify_create overlap 0.9 modify_create nuc yes         &
                react DimerOn all ${rstep} 0.900000 1.100000 mPreDimerOn mPostDimerOn Reactions_rdis/map_DimerOn.txt prob v_pon ${seed} stabilize_steps ${stab_steps} modify_create fit 1 modify_create overlap 0.9         &
                react TrimerOn all ${rstep} 0.900000 1.100000 mPreTrimerOn mPostTrimerOn Reactions_rdis/map_TrimerOn.txt prob v_pon ${seed} stabilize_steps ${stab_steps} modify_create fit 1 modify_create overlap 0.9         &
                react OligomerOn all ${rstep} 0.900000 1.100000 mPreOligomerOn mPostOligomerOn Reactions_rdis/map_OligomerOn.txt prob v_pon ${seed} stabilize_steps ${stab_steps} modify_create fit 1 modify_create overlap 0.9         &
                react OligomerOff all ${rstep} 0.900000 1.100000 mPreOligomerOff mPostOligomerOff Reactions_rdis/map_OligomerOff.txt prob v_poff ${seed} stabilize_steps ${stab_steps}         &
                react QuartomerOff all ${rstep} 0.900000 1.100000 mPreQuartomerOff mPostQuartomerOff Reactions_rdis/map_QuartomerOff.txt prob v_poff ${seed} stabilize_steps ${stab_steps}         &
                react TrimerOff all ${rstep} 0.900000 1.100000 mPreTrimerOff mPostTrimerOff Reactions_rdis/map_TrimerOff.txt prob v_poff ${seed} stabilize_steps ${stab_steps}         &
                react DimerOff all ${rstep} 0.900000 1.100000 mPreDimerOff mPostDimerOff Reactions_rdis/map_DimerOff.txt prob v_poff ${seed} stabilize_steps ${stab_steps}

variable            vMaskHeadType atom "type==3"
group               HeadMons dynamic all var vMaskHeadType every 1
variable            vMaskTailType atom "type==2"
group               TailMons dynamic all var vMaskTailType every 1
variable            vMaskHTType atom "type==2 || type==3"
group               HTMons dynamic all var vMaskHTType every 1
variable            vMaskAlive atom "type==1 || type==2 || type==3"
group               alive dynamic all var vMaskAlive every 1

variable            vR atom "gmask(bond_react_MASTER_group)"
variable            vHR atom "gmask(HTMons) * gmask(bond_react_MASTER_group)"
fix                 fHR all store/state 10 v_vHR
variable            vMaskFHR atom "f_fHR == 1"
group               gFHR dynamic all var vMaskFHR every 1
variable            vMaskVHR atom "v_vHR == 1"
group               gVHR dynamic all var vMaskVHR every 1
variable            vHRBefore atom "gmask(HeadBefore) * gmask(bond_react_MASTER_group)"
variable            vNHRB atom "(1-gmask(HeadBefore)) * gmask(bond_react_MASTER_group) * (1-gmask(CoreBefore))"
variable            vSAZT atom "(1-gmask(TailMons)) * f_fSAZ"
variable            v1T atom "v_vNHRB * v_vHR"
variable            vSI atom "f_fSI + v_v1T * (step - f_fSI)"
fix                 fSI all store/state 1 v_vSI
variable            vSA atom (step-f_fSI)
variable            vTailsTime atom v_vSA/v_thyd
variable            vTailsE atom exp(-v_vTailsTime)
variable            vTailsP atom 1.0-exp(-v_vTailsTime)


fix                 fLang all langevin 1.0 1.0 1.0 ${seed}
fix                 fNVE AllAtoms_REACT nve

dump                1 all custom ${dump_time} output.xyz id mol type x y z v_vTailsTime
dump_modify         1 format line "%d %d %d %.2f %.2f %.2f %.1f"

thermo              ${dump_time}
compute_modify      thermo_temp dynamic/dof yes
thermo_style        custom step v_realtime temp pe ke etotal epair ebond eangle vol density atoms

compute             cTempAll all temp
compute_modify      cTempAll dynamic/dof yes
compute             cTempAlive alive temp
compute_modify      cTempAlive dynamic/dof yes
compute             peratom all pe/atom
compute             peAll all reduce ave c_peratom
compute             peAlive alive reduce ave c_peratom
variable            vNumAlive equal count(alive)
variable            vNumHeads equal count(HeadMons)
variable            vNumTails equal count(TailMons)

#compute             cBonds all property/local batom1 batom2 btype
#compute             cBondDxys all bond/local engpot force dist

#dump                2 all local ${dump_time} bonds_coarse.dump c_cBonds[*] c_cBondDxys[*]
#dump_modify         2 format line "%f %f %f %.2f %.2f %.2f"

fix                 print_thermo1 alive ave/time ${dump_time} 1 ${dump_time} c_cTempAll c_cTempAlive v_vNumAlive v_vNumHeads v_vNumTails c_peAll c_peAlive file thermo.txt

fix                 twodim all enforce2d

variable            restartsteps equal v_run_steps/5
restart             ${restartsteps} restart

timestep            ${tstep}
run                 ${run_steps}
